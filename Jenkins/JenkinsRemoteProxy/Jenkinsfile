pipeline {
    agent {
        node {
            label "${NODE_LABEL}"
            customWorkspace "${SLAVE_WORKSPACE}"
        }
    }

    stages {
        stage("Initialization") {
            steps {
                // use name of the patchset as the build name
                buildName "${ENVIRONMENT}: ${COUNTRY}"
                buildDescription "Executed @ ${NODE_NAME}"
            }
        }
        stage('Test') {
            steps {
                sh "echo JOB_NAME=${env.BUILD_TAG} > .env"
                sh '''
                    echo HOST_UID_GID=$(id -u):$(id -g) >> .env
                    echo RESULTS_URL=${HOST_WORKSPACE} >> .env
                    echo version=${VERSION} >> .env
                    echo browser=$BROWSER >> .env
                    echo country=$COUNTRY >> .env
                    echo environment=$ENVIRONMENT >> .env
                    echo remote_url=$REMOTE_URL >> .env
                    echo test_cases=$TEST_CASES >> .env
                    echo test_suite=$TEST_SUITE >> .env
                '''

                sh 'sh -x ./Jenkins/JenkinsRemoteProxy/run-test-selenoid.sh'
            }
        }
    }
    post {
        always {
            robot otherFiles: '*.png', outputPath: './results', passThreshold: 90.0, unstableThreshold: 75.0
            cleanWs()
        }
    }
}